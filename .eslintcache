[{"/Users/christopherbrooks/Desktop/For Chris/src/index.js":"1","/Users/christopherbrooks/Desktop/For Chris/src/components/HeaderComponent.js":"2","/Users/christopherbrooks/Desktop/For Chris/src/components/CampsiteInfoComponent.js":"3","/Users/christopherbrooks/Desktop/For Chris/src/redux/promotions.js":"4","/Users/christopherbrooks/Desktop/For Chris/src/App.js":"5","/Users/christopherbrooks/Desktop/For Chris/src/redux/comments.js":"6","/Users/christopherbrooks/Desktop/For Chris/src/components/DirectoryComponent.js":"7","/Users/christopherbrooks/Desktop/For Chris/src/components/HomeComponent.js":"8","/Users/christopherbrooks/Desktop/For Chris/src/redux/partners.js":"9","/Users/christopherbrooks/Desktop/For Chris/src/components/FooterComponent.js":"10","/Users/christopherbrooks/Desktop/For Chris/src/components/ContactComponent.js":"11","/Users/christopherbrooks/Desktop/For Chris/src/reportWebVitals.js":"12","/Users/christopherbrooks/Desktop/For Chris/src/redux/campsites.js":"13","/Users/christopherbrooks/Desktop/For Chris/src/components/AboutComponent.js":"14"},{"size":695,"mtime":1606703404000,"results":"15","hashOfConfig":"16"},{"size":5229,"mtime":1595732102000,"results":"17","hashOfConfig":"16"},{"size":6182,"mtime":1610523224000,"results":"18","hashOfConfig":"16"},{"size":190,"mtime":1610731770607,"results":"19","hashOfConfig":"16"},{"size":619,"mtime":1572739746000,"results":"20","hashOfConfig":"16"},{"size":444,"mtime":1610733260958,"results":"21","hashOfConfig":"16"},{"size":1440,"mtime":1610514532000,"results":"22","hashOfConfig":"16"},{"size":1324,"mtime":1610736856836,"results":"23","hashOfConfig":"16"},{"size":182,"mtime":1610731750630,"results":"24","hashOfConfig":"16"},{"size":1936,"mtime":1595720334000,"results":"25","hashOfConfig":"16"},{"size":11166,"mtime":1610514532000,"results":"26","hashOfConfig":"16"},{"size":362,"mtime":1606181388000,"results":"27","hashOfConfig":"16"},{"size":186,"mtime":1610731705761,"results":"28","hashOfConfig":"16"},{"size":4036,"mtime":1610514532000,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1ytf8hg",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/christopherbrooks/Desktop/For Chris/src/index.js",[],["62","63"],"/Users/christopherbrooks/Desktop/For Chris/src/components/HeaderComponent.js",[],"/Users/christopherbrooks/Desktop/For Chris/src/components/CampsiteInfoComponent.js",["64","65","66"],"import React, { Component } from 'react';\r\nimport { Card, CardImg, CardText, CardBody, Breadcrumb, BreadcrumbItem,\r\n    Button, Modal, ModalHeader, ModalBody, Label } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\n\r\nconst maxLength = len => val => !(val) || (val.length <= len);\r\nconst minLength = len => val => val && (val.length >= len);\r\n\r\nfunction RenderCampsite({campsite}) {\r\n    return (\r\n        <div className=\"col-md-5 m-1\">\r\n            <Card>\r\n                <CardImg top src={campsite.image} alt={campsite.name} />\r\n                <CardBody>\r\n                    <CardText>{campsite.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction RenderComments({comments}) {\r\n    if (comments) {\r\n        return (\r\n            <div className=\"col-md-5 m-1\">\r\n                <h4>Comments</h4>\r\n                {\r\n                    comments.map(comment => {\r\n                        return (\r\n                            <div key={comment.id}>\r\n                                <p>\r\n                                    {comment.text}<br />\r\n                                    -- {comment.author}, {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}\r\n                                </p>\r\n                            </div>\r\n                        );\r\n                    })\r\n                }\r\n                <CommentForm />\r\n            </div>\r\n        );\r\n    }\r\n    return <div />;\r\n}\r\n\r\nclass CommentForm extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isModalOpen: false\r\n        };\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.toggleModal();\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        alert('Current State is: ' + JSON.stringify(values));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button outline onClick={this.toggleModal}>\r\n                    <i className=\"fa fa-pencil fa-lg\" /> Submit Comment\r\n                </Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={values => this.handleSubmit(values)}>\r\n                            <div className=\"form-group\">\r\n                                <Label htmlFor=\"rating\">Rating</Label>\r\n                                <Control.select model=\".rating\" id=\"rating\" name=\"rating\"\r\n                                    className=\"form-control\">\r\n                                    <option>1</option>\r\n                                    <option>2</option>\r\n                                    <option>3</option>\r\n                                    <option>4</option>\r\n                                    <option>5</option>\r\n                                </Control.select>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <Label htmlFor=\"author\">Your Name</Label>\r\n                                <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                                    placeholder=\"Your Name\"\r\n                                    className=\"form-control\"\r\n                                        validators={{\r\n                                            minLength: minLength(2), \r\n                                            maxLength: maxLength(15)\r\n                                        }}\r\n                                />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".author\"\r\n                                    show=\"touched\"\r\n                                    component=\"div\"\r\n                                    messages={{\r\n                                        minLength: 'Must be at least 2 characters',\r\n                                        maxLength: 'Must be 15 characters or less'\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <Label htmlFor=\"text\">Comment</Label>\r\n                                    <Control.textarea model=\".text\" id=\"text\" name=\"text\"\r\n                                        rows=\"6\"\r\n                                        className=\"form-control\"\r\n                                    />\r\n                            </div>\r\n                            <Button type=\"submit\" color=\"primary\">\r\n                                Submit\r\n                            </Button>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction CampsiteInfo(props) {\r\n    if (props.campsite) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to=\"/directory\">Directory</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>{props.campsite.name}</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <h2>{props.campsite.name}</h2>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <RenderCampsite campsite={props.campsite} />\r\n                    <RenderComments comments={props.comments} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    return <div />;\r\n}\r\n\r\nexport default CampsiteInfo;",["67","68"],"/Users/christopherbrooks/Desktop/For Chris/src/redux/promotions.js",[],"/Users/christopherbrooks/Desktop/For Chris/src/App.js",[],["69","70"],"/Users/christopherbrooks/Desktop/For Chris/src/redux/comments.js",[],"/Users/christopherbrooks/Desktop/For Chris/src/components/DirectoryComponent.js",[],"/Users/christopherbrooks/Desktop/For Chris/src/components/HomeComponent.js",[],"/Users/christopherbrooks/Desktop/For Chris/src/redux/partners.js",[],"/Users/christopherbrooks/Desktop/For Chris/src/components/FooterComponent.js",[],"/Users/christopherbrooks/Desktop/For Chris/src/components/ContactComponent.js",["71","72","73","74","75","76","77"],"/Users/christopherbrooks/Desktop/For Chris/src/reportWebVitals.js",[],"/Users/christopherbrooks/Desktop/For Chris/src/redux/campsites.js",[],"/Users/christopherbrooks/Desktop/For Chris/src/components/AboutComponent.js",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":82,"column":33,"nodeType":"84","endLine":83,"endColumn":62},{"ruleId":"82","severity":1,"message":"85","line":93,"column":33,"nodeType":"84","endLine":100,"endColumn":35},{"ruleId":"82","severity":1,"message":"86","line":114,"column":37,"nodeType":"84","endLine":117,"endColumn":39},{"ruleId":"78","replacedBy":"87"},{"ruleId":"80","replacedBy":"88"},{"ruleId":"78","replacedBy":"89"},{"ruleId":"80","replacedBy":"90"},{"ruleId":"82","severity":1,"message":"85","line":82,"column":37,"nodeType":"84","endLine":90,"endColumn":39},{"ruleId":"82","severity":1,"message":"85","line":107,"column":37,"nodeType":"84","endLine":115,"endColumn":39},{"ruleId":"82","severity":1,"message":"85","line":132,"column":37,"nodeType":"84","endLine":141,"endColumn":39},{"ruleId":"82","severity":1,"message":"85","line":159,"column":37,"nodeType":"84","endLine":166,"endColumn":39},{"ruleId":"82","severity":1,"message":"91","line":183,"column":45,"nodeType":"84","endLine":187,"endColumn":47},{"ruleId":"82","severity":1,"message":"83","line":193,"column":37,"nodeType":"84","endLine":194,"endColumn":66},{"ruleId":"82","severity":1,"message":"86","line":203,"column":37,"nodeType":"84","endLine":206,"endColumn":39},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE",["92"],["93"],["92"],["93"],"Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","no-global-assign","no-unsafe-negation"]